---
import LibraryCard from './LibraryCard.astro';
import { supabase } from '../lib/supabase';

interface Props {
  currentLibraryId: number;
  frameworkId: number;
  limit?: number;
}

const { currentLibraryId, frameworkId, limit = 3 } = Astro.props;

// Get related libraries (same framework, excluding current)
const { data: relatedLibraries } = await supabase
  .from('libraries')
  .select(`
    *,
    frameworks:library_frameworks(framework_id(id, name, slug), is_primary),
    tags:library_tags(tag_id(id, name, slug))
  `)
  .eq('library_frameworks.framework_id', frameworkId)
  .neq('id', currentLibraryId)
  .order('github_stars', { ascending: false })
  .limit(limit);
---

{relatedLibraries && relatedLibraries.length > 0 && (
  <div class="mt-8">
    <h2 class="text-lg font-bold text-gray-900 mb-4">Related Libraries</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4">
      {relatedLibraries.map(library => (
        <LibraryCard library={library} />
      ))}
    </div>
  </div>
)}

---
interface Props {
  library: {
    id: string;
    name: string;
    slug: string;
    description: string;
    icon_url?: string;
    logo_url?: string;
    github_stars?: number;
    npm_downloads?: number;
    npm_package_name?: string;
    total_components?: number;
    frameworks?: {
      framework_id: {
        name: string;
        slug: string;
      };
      is_primary: boolean;
    }[];
    tags?: {
      tag_id: {
        name: string;
        slug: string;
      };
    }[];
  };
}

const { library } = Astro.props;
const imageUrl = library.icon_url || library.logo_url || '/favicon.svg';

// Format numbers for display
function formatNumber(num: number): string {
  if (!num) return '0';
  if (num >= 1000000) {
    return (num / 1000000).toFixed(1) + 'M';
  }
  if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'k';
  }
  return num.toString();
}

// Get frameworks to display (primary first, then others, limit to 2)
const frameworksToDisplay = library.frameworks 
  ? [...library.frameworks].sort((a, b) => (a.is_primary ? -1 : 1)).slice(0, 2)
  : [];
---

<a href={`/libraries/${library.slug}`} class="block group">
  <div class="bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow duration-200">
    <div class="flex items-start">
      <div class="w-10 h-10 flex-shrink-0 flex items-center justify-center mr-3">
        <img 
          src={imageUrl} 
          alt={`${library.name} logo`} 
          class="max-w-full max-h-full object-contain"
          onerror="this.onerror=null; this.src='/favicon.svg';"
        />
      </div>
      <div class="flex-1 min-w-0">
        <h3 class="text-sm font-medium text-gray-900 group-hover:text-indigo-600 truncate">
          {library.name}
        </h3>
        {frameworksToDisplay.length > 0 && (
          <div class="flex items-center gap-1 flex-wrap">
            {frameworksToDisplay.map((fw, index) => (
              <>
                <span class="text-xs text-gray-500 truncate">
                  {fw.framework_id.name}
                </span>
                {index < frameworksToDisplay.length - 1 && (
                  <span class="text-xs text-gray-400">â€¢</span>
                )}
              </>
            ))}
            {library.frameworks && library.frameworks.length > 2 && (
              <span class="text-xs text-gray-400">+{library.frameworks.length - 2}</span>
            )}
          </div>
        )}
      </div>
      {library.github_stars && (
        <div class="flex items-center text-gray-700 text-xs">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z"/>
          </svg>
          {formatNumber(library.github_stars)}
        </div>
      )}
    </div>
    
    <div class="mt-3 flex flex-wrap gap-3">
      {library.total_components && (
        <div class="flex items-center text-gray-600 text-xs">
          <svg class="h-3 w-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
          </svg>
          <span>{library.total_components} Components</span>
        </div>
      )}
      
      {library.npm_downloads && (
        <div class="flex items-center text-gray-600 text-xs">
          <svg class="h-3 w-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
          </svg>
          <span>{formatNumber(library.npm_downloads)} Downloads</span>
        </div>
      )}
    </div>
  </div>
</a>
